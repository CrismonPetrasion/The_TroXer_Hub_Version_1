--// Variables

local LocalPlayer = game:GetService("Players").LocalPlayer
local Character = LocalPlayer.Character
local Humanoid = Character:WaitForChild("Humanoid")

--// Repeat Task

repeat
    task.wait()
until game:IsLoaded()

--// Library

local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

if game.PlaceId == 11520107397 or game.PlaceId == 6403373529 or game.PlaceId == 9015014224 then
    local Bypass;
    Bypass = hookmetamethod(game, "__namecall", function(method, ...) 
        if getnamecallmethod() == "FireServer" and method == game.ReplicatedStorage.Ban then
            return
        elseif getnamecallmethod() == "FireServer" and method == game.ReplicatedStorage.AdminGUI then
            return
        elseif getnamecallmethod() == "FireServer" and method == game.ReplicatedStorage.WalkSpeedChanged then
            return
        end
        return Bypass(method, ...)
    end)
elseif game.PlaceId == 9431156611 then
    local Bypass;
    Bypass = hookmetamethod(game, "__namecall", function(method, ...) 
        if getnamecallmethod() == "FireServer" and method == game.ReplicatedStorage.Events.Ban then
            return
        elseif getnamecallmethod() == "FireServer" and method == game.ReplicatedStorage.Events.AdminGUI then
            return
        elseif getnamecallmethod() == "FireServer" and method == game.ReplicatedStorage.Events.WS then
            return
        elseif getnamecallmethod() == "FireServer" and method == game.ReplicatedStorage.Events.WS2 then
            return
        end
        return Bypass(method, ...)
    end)
end

--// Window

local Window = Fluent:CreateWindow({
    Title = "TroXer Hub | Slap Battles Version: " .. Fluent.Version,
    SubTitle = "By ArteeSo",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true, -- The blur may be detectable, setting this to false disables blur entirely
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl -- Used when theres no MinimizeKeybind
})

--// Tabs

local Tabs = {
    Combat = Window:AddTab({
        Title = "Combat",
        Icon = "crosshair"
    }),
    Misc = Window:AddTab({
        Title = "Misc",
        Icon = "settings"
    }),
    Player = Window:AddTab({
        Title = "Player",
        Icon = "contact"
    }),
    Settings = Window:AddTab({
        Title = "Settings",
        Icon = "settings"
    }),
}

--// Options

local Options = Fluent.Options

--// Notify

function Notify(Title, Content, SubContent, Duration)
    Fluent:Notify({
        Title = Title or "Error",
        Content = Content or "Error",
        SubContent = SubContent or "Error",
        Duration = Duration or 1
    })
end

--// Functions

function Anti_Void()
    local Part = Instance.new("Part", workspace)
    Part.Name = "AntiVoid"
    Part.CFrame = CFrame.new(0,-7.5,0)
    Part.Size = Vector3.new(1000,0,1000)
    Part.Anchored = true
    Part.Transparency = 0.8
end

Anti_Void()

function Combat()
    local Toggle2 = Tabs.Combat:AddToggle("Slap", {
        Title = "Slap Aura", 
        Default = false
    })

    Toggle2:OnChanged(function()
        local Value = Options.Slap.Value
        while Value do
            for Index, Player in pairs(game.Players:GetChildren()) do
                if Player ~= game.Players.LocalPlayer and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") and game.Players.LocalPlayer.Character then
                    if Player.Character:FindFirstChild("entered") and Player.Character:FindFirstChild("HumanoidRootPart") then
                        Magnitude = (Character.HumanoidRootPart.Position - Player.Character.HumanoidRootPart.Position).Magnitude
                        if Magnitude <= 25 then
                            game:GetService("ReplicatedStorage").KSHit:FireServer(Player.Character:WaitForChild("HumanoidRootPart"))
                        end
                    end
                end
            end
            task.wait(1.1)
        end
    end)

    local Toggle3 = Tabs.Combat:AddToggle("Rojo", {
        Title = "Rojo Spam", 
        Default = false
    })

    Toggle3:OnChanged(function()
        local Value = Options.Rojo.Value
        while Value do
            game:GetService("ReplicatedStorage"):WaitForChild("RojoAbility"):FireServer("Release", {Character.HumanoidRootPart.CFrame})
            task.wait()
        end
    end)

    local Input = Tabs.Combat:AddInput("Input", {
        Title = "Make Person Use Rojo",
        Default = "Username",
        Placeholder = "Me",
        Numeric = false, -- Only allows numbers
        Finished = false, -- Only calls callback when you press enter
        Callback = function(Value)
            if Value == "Me" or Value == "me" or Value == "Username" or Value == "" then
                local Person = LocalPlayer.Name
            else
                Person = Value
            end
        end
    })

    local Toggle4 = Tabs.Combat:AddToggle("Null", {
        Title = "Null Spam", 
        Default = false
    })

    Toggle4:OnChanged(function()
        local Value = Options.Null.Value
        while Value do
            game:GetService("ReplicatedStorage").NullAbility:FireServer()
            task.wait()
        end
    end)

    local Toggle5 = Tabs.Combat:AddToggle("Rhythm", {
        Title = "Rhythm Spam", 
        Default = false
    })

    Toggle5:OnChanged(function()
        local Value = Options.Rhythm.Value
        while Value do
            game:GetService("ReplicatedStorage").rhythmevent:FireServer("AoeExplosion",0)
            task.wait()
        end
    end)
end

function Misc()
    local Toggle = Tabs.Misc:AddToggle("Anti", {
        Title = "Anti Void", 
        Default = false
    })

    Toggle:OnChanged(function()
        local Value = Options.Anti.Value
        workspace.AntiVoid.CanCollide = Value
    end)

    local Toggle2 = Tabs.Misc:AddToggle("Radgoll", {
        Title = "Anti Radgoll", 
        Default = false
    })

    Toggle2:OnChanged(function()
        local Value = Options.Radgoll.Value
        if Value == true then
            Humanoid.Health = 0
            LocalPlayer.CharacterAdded:Connect(function()
                Character:WaitForChild("Ragdolled").Changed:Connect(function()
                    if game.Players.LocalPlayer.Character:WaitForChild("Ragdolled").Value == true and Value then
                        game.Players.LocalPlayer.Character.Torso.Anchored = true
                        repeat 
                            task.wait() 
                        until game.Players.LocalPlayer.Character:WaitForChild("Ragdolled").Value == false
                        game.Players.LocalPlayer.Character.Torso.Anchored = false
                    end
                end)
            end)
        end
    end)

end

function Player()
    local Slider = Tabs.Player:AddSlider("Slider", {
        Title = "Player WalkSpeed",
        Description = "Changes player's walkspeed!",
        Default = 2,
        Min = 0,
        Max = 1000,
        Rounding = 1,
        Callback = function(Value)
            Humanoid.WalkSpeed = Value
        end
    })

    Slider:OnChanged(function(Value)
        Humanoid.WalkSpeed = Value
    end)

    local Slider2 = Tabs.Player:AddSlider("Slider", {
        Title = "Player JumpPower",
        Description = "Changes player's jump power!",
        Default = 2,
        Min = 0,
        Max = 1000,
        Rounding = 1,
        Callback = function(Value)
            Humanoid.JumpPower = Value
        end
    })

    Slider2:OnChanged(function(Value)
        Humanoid.JumpPower = Value
    end)
end

do
    Combat()
    Misc()
    Player()
end

Window:SelectTab(1)

SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)
SaveManager:IgnoreThemeSettings()
SaveManager:SetIgnoreIndexes({})
InterfaceManager:SetFolder("FluentScriptHub")
SaveManager:SetFolder("FluentScriptHub/specific-game")
InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)
SaveManager:LoadAutoloadConfig()
